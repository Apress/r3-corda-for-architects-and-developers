buildscript {
    ext.corda_release_group = 'net.corda'
    ext.corda_release_version = 'corda-3.0'
    ext.corda_gradle_plugins_version = '3.0.9'
    ext.junit_version = '4.12'
    ext.quasar_version = '0.7.9'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
        flatDir { dirs "lib/dependencies" }
    }

    dependencies {
        classpath fileTree(dir: 'lib/dependencies', include: '*.jar')
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
    flatDir { dirs "${project.rootProject.projectDir}/lib/dependencies" }
}

apply plugin: 'java'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

sourceSets {
    main {
        resources {
            srcDir "../config/dev"
        }
    }
    test {
        resources {
            srcDir "../config/test"
        }
    }
}

dependencies {
    compileClasspath fileTree(dir: 'lib/dependencies', include: '*.jar')

    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
    cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
    cordaCompile "$corda_release_group:corda-node-api:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"

    testCompileClasspath fileTree(dir: 'lib/dependencies', include: '*.jar')
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
    testCompile "$corda_release_group:corda-test-utils:$corda_release_version"
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters" // Required for shell commands.
}

task deployNodesJava(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    directory "./build/nodes"
    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating: false]
        p2pPort 10002
        cordapps = [
                "$project.group:cordapp:$project.version"
        ]
    }
    node {
        name "O=PartyA,L=London,C=GB"
        p2pPort 10003
        rpcSettings {
            address("localhost:10004")
            adminAddress("localhost:10005")
        }
        cordapps = [
                "$project.group:cordapp:$project.version"
        ]
        rpcUsers = [[user: "user1", password: "test", permissions: ["ALL"]]]
    }
    node {
        name "O=PartyB,L=New York,C=US"
        p2pPort 10006
        rpcSettings {
            address("localhost:10007")
            adminAddress("localhost:10008")
        }
        cordapps = [
                "$project.group:cordapp:$project.version"
        ]
        rpcUsers = [[user: "user1", password: "test", permissions: ["ALL"]]]
    }
    node {
        name "O=PartyC,L=Lagos,C=NG"
        p2pPort 10009
        rpcSettings {
            address("localhost:10010")
            adminAddress("localhost:10011")
        }
        cordapps = [
                "$project.group:cordapp:$project.version"
        ]
        rpcUsers = [[user: "user1", password: "test", permissions: ["ALL"]]]
    }
}

task gatherDependencies(type: Copy) {
    into "lib/dependencies"
    from buildscript.configurations.classpath
    from configurations.runtime
    from configurations.compile
    from configurations.testCompile
    from configurations.testRuntime
    from configurations.quasar
}
